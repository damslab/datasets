{
  "description": "A timetable is made of a set of TimetableStops and a potential Disruption.",
  "properties": {
    "eva": {
      "description": "EVA station number.",
      "format": "int64",
      "type": "integer",
      "xml": {
        "attribute": true
      }
    },
    "m": {
      "description": "List of Message.",
      "items": {
        "description": "A message that is associated with an event, a stop or a trip.",
        "properties": {
          "c": {
            "description": "Code.",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "cat": {
            "description": "Category.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "del": {
            "description": "Deleted.",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "dm": {
            "description": "Distributor message.",
            "items": {
              "description": "An additional message to a given station-based disruption by a specific distributor.",
              "properties": {
                "int": {
                  "description": "Internal text.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "n": {
                  "description": "Distributor name.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "t": {
                  "description": "Distributor type.\n\n* s - CITY\n* r - REGION\n* f - LONG DISTANCE\n* x - OTHER\n",
                  "enum": [
                    "s",
                    "r",
                    "f",
                    "x"
                  ],
                  "type": "string"
                },
                "ts": {
                  "description": "Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "ec": {
            "description": "External category.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "elnk": {
            "description": "External link associated with the message.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ext": {
            "description": "External text.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "from": {
            "description": "Valid from. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "description": "Message id.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "int": {
            "description": "Internal text.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "o": {
            "description": "Owner.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "pr": {
            "description": "Priority.\n\n* 1 - HIGH\n* 2 - MEDIUM\n* 3 - LOW\n* 4 - DONE\n",
            "enum": [
              "1",
              "2",
              "3",
              "4"
            ],
            "type": "string"
          },
          "t": {
            "description": "Message status\n\n* h - HIM\n  A HIM message (generated through the Hafas Information Manager).\n* q - QUALITY CHANGE\n  A message about a quality change.\n* f - FREE\n  A free text message.\n* d - CAUSE OF DELAY\n  A message about the cause of a delay.\n* i - IBIS\n  An IBIS message (generated from IRIS-AP).\n* u - UNASSIGNED IBIS MESSAGE\n  An IBIS message (generated from IRIS-AP) not yet assigned to a train.\n* r - DISRUPTION\n  A major disruption.\n* c - CONNECTION\n  A connection.\n",
            "enum": [
              "h",
              "q",
              "f",
              "d",
              "i",
              "u",
              "r",
              "c"
            ],
            "type": "string"
          },
          "tl": {
            "description": "Trip label.",
            "items": {
              "description": "It's a compound data type that contains common data items that characterize a Trip. The contents is represented as a compact 6-tuple in XML.",
              "properties": {
                "c": {
                  "description": "Category. Trip category, e.g. \"ICE\" or \"RE\".",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "f": {
                  "description": "Filter flags.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "n": {
                  "description": "Trip/train number, e.g. \"4523\".",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "o": {
                  "description": "Owner. A unique short-form and only intended to map a trip to specific evu.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "t": {
                  "description": "Trip type",
                  "enum": [
                    "p",
                    "e",
                    "z",
                    "s",
                    "h",
                    "n"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "c",
                "n",
                "o"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "to": {
            "description": "Valid to. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ts": {
            "description": "Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. \"1404011437\" for 14:37 on April the 1st of 2014.",
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "required": [
          "id",
          "t",
          "ts"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "s": {
      "description": "List of TimetableStop.",
      "items": {
        "description": "A stop is a part of a Timetable.",
        "properties": {
          "ar": {
            "description": "An event (arrival or departure) that is part of a stop.",
            "properties": {
              "cde": {
                "description": "Changed distant endpoint.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "clt": {
                "description": "Cancellation time. Time when the cancellation of this stop was created. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "cp": {
                "description": "Changed platform.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "cpth": {
                "description": "Changed path.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "cs": {
                "description": "Event status.\n\n* p - PLANNED\n  The event was planned. This status is also used when the cancellation of an event has been revoked.\n* a - ADDED\n  The event was added to the planned data (new stop).\n* c - CANCELLED\n  The event was canceled (as changedstatus, can apply to planned and added stops).\n",
                "enum": [
                  "p",
                  "a",
                  "c"
                ],
                "type": "object"
              },
              "ct": {
                "description": "Changed time. New estimated or actual departure or arrival time. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "dc": {
                "description": "Distant change.",
                "type": "integer",
                "xml": {
                  "attribute": true
                }
              },
              "hi": {
                "description": "Hidden. 1 if the event should not be shown on WBT because travellers are not supposed to enter or exit the train at this stop.",
                "type": "integer",
                "xml": {
                  "attribute": true
                }
              },
              "l": {
                "description": "Line. The line indicator (e.g. \"3\" for an S-Bahn or \"45S\" for a bus).",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "m": {
                "description": "List of messages.",
                "items": {
                  "$ref": "#/properties/m/items"
                },
                "type": "array"
              },
              "pde": {
                "description": "Planned distant endpoint.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "pp": {
                "description": "Planned platform.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "ppth": {
                "description": "Planned Path. A sequence of station names separated by the pipe symbols ('|').\nE.g.: 'Mainz Hbf|R�sselsheim|Frankfrt(M) Flughafen'.\nFor arrival, the path indicates the stations that come before the current station. The first element then is the trip's start station.\nFor departure, the path indicates the stations that come after the current station. The last element in the path then is the trip's destination station.\nNote that the current station is never included in the path (neither for arrival nor for departure).\n",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "ps": {
                "$ref": "#/properties/s/items/properties/ar/properties/cs"
              },
              "pt": {
                "description": "Planned time. Planned departure or arrival time. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "tra": {
                "description": "Transition. Trip id of the next or previous train of a shared train. At the start stop this references the previous trip, at the last stop it references the next trip. E.g. '2016448009055686515-1403311438-1'",
                "type": "string"
              },
              "wings": {
                "description": "Wing. A sequence of trip id separated by the pipe symbols ('|'). E.g. '-906407760000782942-1403311431'.",
                "type": "string",
                "xml": {
                  "attribute": true
                }
              }
            },
            "type": "object"
          },
          "conn": {
            "description": "Connection element.",
            "items": {
              "description": "It's information about a connected train at a particular stop.",
              "properties": {
                "cs": {
                  "description": "Connection status.\n\n* w - WAITING\n  This (regular) connection is waiting.\n* n - TRANSITION\n  This (regular) connection CANNOT wait.\n* a - ALTERNATIVE\n  This is an alternative (unplanned) connection that has been introduced as a replacement for one regular connection that cannot wait. The connections \"tl\" (triplabel) attribute might in this case refer to the replaced connection (or more specifi-cally the trip from that connection). Alternative connections are always waiting (they are re-moved otherwise).\n",
                  "enum": [
                    "w",
                    "n",
                    "a"
                  ],
                  "type": "string"
                },
                "eva": {
                  "description": "EVA station number.",
                  "format": "int64",
                  "type": "integer",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "description": "Id.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "ref": {
                  "$ref": "#/properties/s/items"
                },
                "s": {
                  "$ref": "#/properties/s/items"
                },
                "ts": {
                  "description": "Time stamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "required": [
                "cs",
                "id",
                "s",
                "ts"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "dp": {
            "$ref": "#/properties/s/items/properties/ar"
          },
          "eva": {
            "description": "The eva code of the station of this stop. Example '8000105' for Frankfurt(Main)Hbf.",
            "format": "int64",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "hd": {
            "description": "Historic delay element.",
            "items": {
              "description": "It's the history of all delay-messages for a stop. This element extends HistoricChange.",
              "properties": {
                "ar": {
                  "description": "The arrival event. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "cod": {
                  "description": "Detailed description of delay cause.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "dp": {
                  "description": "The departure event. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "src": {
                  "description": "Delay source.\n\n* L - LEIBIT\n  LeiBit/LeiDis.\n* NA - RISNE AUT\n  IRIS-NE (automatisch).\n* NM - RISNE MAN\n  IRIS-NE (manuell).\n* V - VDV\n  Prognosen durch dritte EVU �ber VDVin.\n* IA - ISTP AUT\n  ISTP automatisch.\n* IM - ISTP MAN\n  ISTP manuell.\n* A - AUTOMATIC PROGNOSIS\n  Automatische Prognose durch Prognoseautomat.\n",
                  "enum": [
                    "L",
                    "NA",
                    "NM",
                    "V",
                    "IA",
                    "IM",
                    "A"
                  ],
                  "type": "string"
                },
                "ts": {
                  "description": "Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "hpc": {
            "description": "Historic platform change element.",
            "items": {
              "description": "It's the history of all platform-changes for a stop. This element extends HistoricChange.",
              "properties": {
                "ar": {
                  "description": "Arrival platform.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "cot": {
                  "description": "Detailed cause of track change.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "dp": {
                  "description": "Departure platform.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "ts": {
                  "description": "Timestamp. The time, in ten digit 'YYMMddHHmm' format, e.g. '1404011437' for 14:37 on April the 1st of 2014.",
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "id": {
            "description": "An id that uniquely identifies the stop. It consists of the following three elements separated by dashes\n* a 'daily trip id' that uniquely identifies a trip within one day. This id is typically reused on subsequent days. This could be negative.\n* a 6-digit date specifier (YYMMdd) that indicates the planned departure date of the trip from its start station.\n* an index that indicates the position of the stop within the trip (in rare cases, one trip may arrive multiple times at one station). Added trips get indices above 100.\nExample '-7874571842864554321-1403311221-11' would be used for a trip with daily trip id '-7874571842864554321' that starts on march the 31th 2014 and where the current station is the 11th stop.\n",
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "m": {
            "description": "Message element.",
            "items": {
              "$ref": "#/properties/m/items"
            },
            "type": "array"
          },
          "ref": {
            "description": "It's a reference to another trip, which holds its label and reference trips, if available.",
            "properties": {
              "rt": {
                "description": "The referred trips reference trip elements.",
                "items": {
                  "$ref": "#/properties/m/items/properties/tl/items"
                },
                "type": "array"
              },
              "tl": {
                "$ref": "#/properties/m/items/properties/tl/items"
              }
            },
            "required": [
              "tl"
            ],
            "type": "object"
          },
          "rtr": {
            "description": "Reference trip relation element.",
            "items": {
              "description": "A reference trip relation holds how a reference trip is related to a stop, for instance the reference trip starts after the stop. Stop contains a collection of that type, only if reference trips are available.",
              "properties": {
                "rt": {
                  "description": "A reference trip is another real trip, but it doesn't have its own stops and events. It refers only to its ref-erenced regular trip. The reference trip collects mainly all different attributes of the referenced regular trip.",
                  "properties": {
                    "c": {
                      "description": "The cancellation flag. True means, the reference trip is cancelled.",
                      "type": "boolean",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "ea": {
                      "description": "It's a compound data type that contains common data items that characterize a reference trip stop. The contents is represented as a compact 4-tuple in XML.",
                      "properties": {
                        "eva": {
                          "description": "The eva number of the correspondent stop of the regular trip.",
                          "format": "int64",
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "i": {
                          "description": "The index of the correspondent stop of the regu-lar trip.",
                          "type": "integer",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "n": {
                          "description": "The (long) name of the correspondent stop of the regular trip.",
                          "type": "string",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "pt": {
                          "description": "The planned time of the correspondent stop of the regular trip.",
                          "type": "string",
                          "xml": {
                            "attribute": true
                          }
                        }
                      },
                      "required": [
                        "eva",
                        "i",
                        "n",
                        "pt"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "description": "An id that uniquely identifies the reference trip. It consists of the following two elements separated by dashes:\n\n* A 'daily trip id' that uniquely identifies a reference trip within one day. This id is typically reused on subsequent days. This could be negative.\n* A 10-digit date specifier (YYMMddHHmm) that indicates the planned departure date of the referenced regular trip from its start station.\n\nExample:\n\n'-7874571842864554321-1403311221' would be used for a trip with daily trip id '-7874571842864554321' that starts on march the 31th 2014.\n",
                      "type": "string",
                      "xml": {
                        "attribute": true
                      }
                    },
                    "rtl": {
                      "description": "It's a compound data type that contains common data items that characterize a reference trip. The con-tents is represented as a compact 3-tuple in XML.",
                      "properties": {
                        "c": {
                          "description": "Category. Trip category, e.g. \"ICE\" or \"RE\".",
                          "type": "string",
                          "xml": {
                            "attribute": true
                          }
                        },
                        "n": {
                          "description": "Trip/train number, e.g. \"4523\".",
                          "type": "string",
                          "xml": {
                            "attribute": true
                          }
                        }
                      },
                      "required": [
                        "c",
                        "n"
                      ],
                      "type": "object"
                    },
                    "sd": {
                      "$ref": "#/properties/s/items/properties/rtr/items/properties/rt/properties/ea"
                    }
                  },
                  "required": [
                    "c",
                    "ea",
                    "id",
                    "rtl",
                    "sd"
                  ],
                  "type": "object"
                },
                "rts": {
                  "description": "The reference trips relation to the stop, which contains it.\n\n* b - BEFORE\n  The reference trip ends before that stop.\n* e - END\n  The reference trips ends at that stop.\n* c - BETWEEN\n  The stop is between reference trips start and end, in other words, the stop is contained within its travel path.\n* s - START\n  The reference trip starts at that stop.\n* a - AFTER\n  The reference trip starts after that stop.\n",
                  "enum": [
                    "b",
                    "e",
                    "c",
                    "s",
                    "a"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "rt",
                "rts"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "tl": {
            "$ref": "#/properties/m/items/properties/tl/items"
          }
        },
        "required": [
          "eva",
          "id"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "station": {
      "description": "Station name.",
      "type": "string",
      "xml": {
        "attribute": true
      }
    }
  },
  "type": "object"
}